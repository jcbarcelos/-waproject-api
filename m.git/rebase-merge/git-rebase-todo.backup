pick e0a59be27abcf72523400f3a3bead28088efca53 refactor: modify filmesController and FilmesUseCase
pick dbf3d955788d016791ffbbe0f513ff5a48deebc5 refactor: modify iFilmes
pick 0cf392f88bd9408e6c028b938e9ba6c99d5bc2c8 refactor: modify filmesUseCase prisma
pick 78d3e4987ee8db20382b519a77769130b7499b76 refactor: modify table remove unique
pick 39f0639a638bf84caba7bed35232d5173021f125 refactor: modify filmesController.spec
pick 95f779a306c32f1dcd3bb2585ddf2b51e2be2b67 refactor: modify filmesUseCase.spec
pick 7a4b1afab5ab5f7e2e1d8e29406173d8afb2031b refactor: modify filmesController
pick 28f6e6942114464cbc0681e13127ba178ae024c3 refactor: modify filmesUseCase
pick 8996ed0a25104b2a424c87b884b6c04780623b6c refactor: modify filmesRouter
pick 365606ba30ffbcfad38ad5316ff811bf94275d0a refactor: remove api
pick 9e671b6942bc57501fc288ec0a1aadcef997bfa9 feat: add readme
pick 80a7055325bb1ae3373fe5528bd62c5219304e47 feat: add git add in husky
pick 90ca6c34dfce0dcb261f7aceac3cb321f9fcb75e feat: add git add in husky
pick f1d422d70c845e57b6650d97081e76a6200bd175 feat: add screens

# Rebase eed7c14..f1d422d onto eed7c14 (14 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#                    commit's log message, unless -C is used, in which case
#                    keep only this commit's message; -c is same as -C but
#                    opens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified); use -c <commit> to reword the commit message
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
