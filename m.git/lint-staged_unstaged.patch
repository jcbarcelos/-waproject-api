diff --git a/package.json b/package.json
index bb79240..b20a30d 100644
--- a/package.json
+++ b/package.json
@@ -7 +7 @@
-    "dev": "ts-node-dev --exit-child --transpile-only --ignore-watch node_modules src/server.ts",
+    "dev": "ts-node-dev --exit-child --transpile-only --ignore-watch node_modules -r tsconfig-paths/register src/server.ts",
@@ -22,7 +21,0 @@
-    "@typescript-eslint/eslint-plugin": "^4.0.1",
-    "eslint": "^7.12.1",
-    "eslint-config-standard-with-typescript": "^21.0.1",
-    "eslint-plugin-import": "^2.22.1",
-    "eslint-plugin-node": "^11.1.0",
-    "eslint-plugin-promise": "^5.0.0",
-    "eslint-plugin-standard": "4.0.1",
diff --git a/prisma/schema.prisma b/prisma/schema.prisma
index 26f9f63..d8c9dd6 100644
--- a/prisma/schema.prisma
+++ b/prisma/schema.prisma
@@ -12,4 +12,4 @@ model Filmes {
-  titulo   String       @unique
-  descricao   String
-  diretor String
-  produtor String
+  title   String       @unique
+  description   String
+  director String
+  producer String
diff --git a/src/interfaces/IFilmes.ts b/src/interfaces/IFilmes.ts
index afde808..c6f84f3 100644
--- a/src/interfaces/IFilmes.ts
+++ b/src/interfaces/IFilmes.ts
@@ -2,4 +2,4 @@ export interface IFilmes {
-  título: string
-  descrição: string
-  diretor: string
-  produtor: string
+  title: string
+  description: string
+  director: string
+  producer: string
@@ -7 +7 @@ export interface IFilmes {
-}
+}
\ No newline at end of file
diff --git a/src/modules/filmes/FilmesController.ts b/src/modules/filmes/FilmesController.ts
index 720a1d7..c5fe613 100644
--- a/src/modules/filmes/FilmesController.ts
+++ b/src/modules/filmes/FilmesController.ts
@@ -5 +5,3 @@ export class FilmesController {
-  async handle (request: Request, response: Response) {
+  async handle(request: Request, response: Response) {
+    const requestSkip: string | null = <string>request.query.skip || null
+    const skipNumber = parseInt(requestSkip)
@@ -7,2 +9 @@ export class FilmesController {
-    const listFilmes = await filmesUseCase.execute()
-    console.log(listFilmes.length)
+    const listFilmes = await filmesUseCase.execute(skipNumber)
diff --git a/src/modules/filmes/FilmesUseCase.ts b/src/modules/filmes/FilmesUseCase.ts
index 7fcdbc6..96247b1 100644
--- a/src/modules/filmes/FilmesUseCase.ts
+++ b/src/modules/filmes/FilmesUseCase.ts
@@ -1,2 +1,2 @@
-import fetch from "cross-fetch"
-
+import { prisma } from "@database/prismaDatabase";
+import { Api } from "@utils/api";
@@ -4,4 +4,24 @@ export class FilmesUseCase {
-  async execute () {
-    const urlFilmes = await fetch("https://ghibliapi.herokuapp.com/films?fields=title,description,director,producer,movie_banner", {
-      headers: {
-        "Content-Type": "application/json"
+  async execute(skipNumber: any) {
+    const apiResult = await Api;
+
+    for (let index = 0; index < apiResult.length; index++) {
+      /* verificar se exist title */
+      const filmesExists = await prisma.filmes.findFirst({
+        where: {
+          title: {
+            equals: apiResult[index].title,
+            mode: "insensitive",
+          },
+        },
+      });
+      /* se não exist title cadastra */
+      if (!filmesExists) {
+        await prisma.filmes.create({
+          data: {
+            title: apiResult[index].title,
+            description: apiResult[index].description,
+            director: apiResult[index].director,
+            producer: apiResult[index].producer,
+            movie_banner: apiResult[index].movie_banner,
+          },
+        });
@@ -8,0 +29,5 @@ export class FilmesUseCase {
+    }
+    /* lista de filmes */
+    const listResults = await prisma.filmes.findMany({
+      skip: skipNumber,
+      take: 10
@@ -10 +35,3 @@ export class FilmesUseCase {
-    return await urlFilmes.json()
+
+
+    return listResults;
diff --git a/src/presentation/controller/signup.spec.ts b/src/presentation/controller/signup.spec.ts
deleted file mode 100644
index 2984cc9..0000000
--- a/src/presentation/controller/signup.spec.ts
+++ /dev/null
@@ -1,17 +0,0 @@
-import { SignUpController } from './signup'
-
-describe('SignUp Controller', () => {
-  test('Should return 400 if no name is provided', () => {
-    const sut = new SignUpController()
-    const httpRequest = {
-      body: {
-        name: 'test',
-        email: 'test@test.com',
-        password: 'test',
-        confirmPassword: 'test'
-      }
-    }
-    const httpResponse = sut.handle(httpRequest)
-    expect(httpResponse.statusCode).toBe(400)
-  })
-})
diff --git a/src/presentation/controller/signup.ts b/src/presentation/controller/signup.ts
deleted file mode 100644
index 26b5116..0000000
--- a/src/presentation/controller/signup.ts
+++ /dev/null
@@ -1,7 +0,0 @@
-export class SignUpController {
-  handle (httpRequest: any): any {
-    return {
-      statusCode: 400
-    }
-  }
-}
diff --git a/tsconfig.json b/tsconfig.json
index 341f0cd..b9cc3cc 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -5 +5 @@
-    "allowJs": false,
+    "allowJs": true,
